name: ci

on:
  push:
  pull_request:
    branches: [ master ]

jobs:

  unit-test:
    name: Unit Test
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get go mod cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

#    - name: Get dependencies
#      run: |
#        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#            dep ensure
#        fi

    - name: Run unit test
      run: make test

  build-dashbaord:
    name: Build Dashboard
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Get go mod cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build dashboard
      run: |
        export TAG=$GITHUB_SHA
        make build-dashboard

    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}

    - name: Publish Dashboard
      run: |
        export TAG=$GITHUB_SHA
        make release-dashboard

  build-cli:
    name: Build biranarys
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get go mod cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}

    - name: Run go releaser
      uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: --snapshot --skip-publish --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist